{
  "swagger": "2.0",
  "info": {
    "description": "N/A",
    "version": "1",
    "title": "Core API"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/signup": {
      "post": {
        "tags": [
          "signup"
        ],
        "produces":[
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Signup"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/signin": {
      "post": {
        "tags": [
          "signin"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Signin"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/newrole": {
      "post": {
        "tags": [
          "new-role"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/new-role"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/oauth": {
      "get": {
        "tags": [
          "oauth"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "permission to sign",
            "required": true,
            "type": "string",
            "format": "json"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/api/v1/{model}": {
      "parameters": [
        {
          "in": "path",
          "name": "model",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "description": "Get all resources in a model",
        "responses": {
          "200": {
            "description": "Returned a list of resources",
            "schema": {
              "$ref": "#/definitions/getAll"
            }
          }
        }
      },
      "post": {
        "description": "Create a new resource in the given model",
        "responses": {
          "200": {
            "description": "Returns created resources",
            "schema": {
              "$ref": "#/definitions/single"
            }
          }
        }
      }
    },
    "/api/v1/{model}/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "model",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "description": "Get a single resource from the data model",
        "responses": {
          "200": {
            "description": "Returned one resource",
            "schema": {
              "$ref": "#/definitions/single"
            }
          }
        }
      },
      "put": {
        "description": "Replace a resource with the specified id in the given model",
        "responses": {
          "200": {
            "description": "Returns replaced resource",
            "schema": {
              "$ref": "#/definitions/single"
            }
          }
        }
      },
      "patch": {
        "description": "Update a resource with the specified id in the given model",
        "responses": {
          "200": {
            "description": "Returns replaced resource",
            "schema": {
              "$ref": "#/definitions/single"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a resource with the specified id in the given model",
        "responses": {
          "200": {
            "description": "Returns replaced resource",
            "schema": {
              "$ref": "#/definitions/single"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Signup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "singup"
      }
    },
    "Signin": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "singin"
      }
    },
    "new-role": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string"
        },
        "capabilities": {
          "type": "string"
        }
      },
      "xml": {
        "name": "singin"
      }
    },
    "getAll": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {}
      },
      "example": {
        "count:2": null,
        "results": [
          "{}",
          "{}"
        ]
      }
    },
    "single": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {}
      },
      "example": {}
    }
  }
}